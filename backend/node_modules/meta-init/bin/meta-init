#!/usr/bin/env node

const fs = require('fs');
const debug = require('debug')('meta-init');
const getMetaFile = require('get-meta-file');
const maybeImportFromGitSlave = require('../lib/maybeImportFromGitSlave');
const path = require('path');
const util = require('util');

if (process.argv[2] === '--help') {
  return console.log(`\n  usage:\n\n    meta init\n`);
}

const metaPath = path.resolve('.meta');

if (fs.existsSync(metaPath) && process.argv[2] !== '--force') {
  return console.error(`A .meta file already exists in ${process.cwd()}. Use --force to override.`);
}

const metaJson = JSON.parse(fs.readFileSync(path.join(__dirname, '..', 'support', '.meta')).toString());

if (fs.existsSync('./.gitslave')) {
  maybeImportFromGitSlave(function (err, projectPairs) {
    if (err) throw err;

    for (let key in projectPairs) {
      metaJson.projects[key] = projectPairs[key];
    }

    const metaString = getMetaFile.format(metaJson);

    console.log(`creating a .meta file in ${process.cwd()} with contents\n${metaString.trim()}`);

    fs.writeFileSync(metaPath, metaString);
  });
} else {
  console.log(`creating a .meta file in ${process.cwd()}`);

  fs.writeFileSync(metaPath, getMetaFile.format(metaJson));
}
